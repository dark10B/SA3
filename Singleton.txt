package Singleton;

public class Singleton {
	private static Singleton instance;
	public String Value;
	
	private Singleton(String Value)
	{
		this.Value=Value;
	}

	public static Singleton getInstance(String Value)
	{
		Singleton result=instance;
		if(result !=null)
		{
			return result;
		}
		synchronized(Singleton.class)
		{
			if(instance==null)
			{
				instance= new Singleton(Value);
			}
			return instance;
		}
	}
}

package Singleton;

public class Demo {
	public static void main(String args[])
	{
		System.out.println("Singleton Example");
		Thread t1=new Thread(new t1());
		Thread t2=new Thread(new t2());
		t1.start();
		t2.start();
	}
	
	static class t1 implements Runnable
	{
		public void run()
		{
			Singleton singleton= Singleton.getInstance("Arbaaz");
			System.out.println(singleton.Value);
		}
	}
	static class t2 implements Runnable
	{
		public void run()
		{
			Singleton singleton= Singleton.getInstance("Khan");
			System.out.println(singleton.Value);
		}
	}

}

